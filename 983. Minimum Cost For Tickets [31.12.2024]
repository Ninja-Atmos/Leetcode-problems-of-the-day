class Solution:
    def mincostTickets(self, days, costs):
        n = len(days)
        dp = [0] * (days[-1] + 1)
        day_set = set(days)
        
        for i in range(1, days[-1] + 1):
            if i not in day_set:
                dp[i] = dp[i - 1]
            else:
                dp[i] = min(dp[i - 1] + costs[0], 
                            dp[max(0, i - 7)] + costs[1], 
                            dp[max(0, i - 30)] + costs[2])
        
        return dp[days[-1]]


solution = Solution()
days1 = [1, 4, 6, 7, 8, 20]
costs1 = [2, 7, 15]
print(solution.mincostTickets(days1, costs1))  # Output: 11

days2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 31]
costs2 = [2, 7, 15]
print(solution.mincostTickets(days2, costs2))  # Output: 17
